<?xml version="1.0" encoding="utf-8" ?>
<ContentPage 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:tasks="clr-namespace:Daily.Tasks"
    xmlns:viewmodels="clr-namespace:Daily.ViewModels"
    xmlns:controls="clr-namespace:Daily.Controls"
    xmlns:converters="clr-namespace:Daily.Converters"
    xmlns:taskLoaderView="clr-namespace:Sharpnado.TaskLoaderView;assembly=Sharpnado.Maui.TaskLoaderView"
    x:Class="Daily.Pages.TaskPage"
    x:DataType="viewmodels:TaskPageViewModel">

    <ContentPage.Resources>

        <ResourceDictionary>

            <x:Int32 x:Key="DefaultAnimationDuration">100</x:Int32>
            
            <x:Double x:Key="TaskLabelWidth">290</x:Double>

            <Thickness x:Key="GeneralTaskCollectionViewMargin">0, 0, 0, 15</Thickness>

            <x:Double x:Key="RadialProgressBarSize">18</x:Double>

            <x:Double x:Key="TaskCardSpacing">7</x:Double>

            <Thickness x:Key="ModificatorMargin">0, 0, 0, 8</Thickness>

            <x:Double x:Key="FloatingActionButtonSize">60</x:Double>

            <x:String x:Key="AddIconName">add.png</x:String>

            <Color x:Key="Goal">#eda5a2</Color>
            <Color x:Key="GoalText">#850000</Color>

            <Color x:Key="GoalCompleted">#a1edbc</Color>
            <Color x:Key="GoalCompletedStroke">#008526</Color>

            <Color x:Key="GoalOverdue">#f38f86</Color>
            <Color x:Key="GoalOverdueStroke">#b86c65</Color>

            <Color x:Key="GeneralTask">#858585</Color>
            <Color x:Key="CondTask">#ed7f3d</Color>

            <Color x:Key="Frequency">#c8edc3</Color>
            <Color x:Key="Time">#c3eced</Color>
            <Color x:Key="Note">#edc2df</Color>

            <Color x:Key="ProgressFill">#cfcfcf</Color>
            <Color x:Key="ProgressBackgroundFill">#a4a4a4</Color>
            <Color x:Key="Completed">#71b866</Color>

            <Color x:Key="BlueSelected">#86f7ea</Color>

            <converters:GoalStatusToColorConverter
                x:Key="GoalStatusToColorConverter"
                IncompletedColor="{StaticResource Hover}"
                CompletedColor="{StaticResource GoalCompleted}"
                OverdueColor="{StaticResource GoalOverdue}"/>

            <converters:GoalStatusToColorConverter
                x:Key="GoalStatusToBorderColorConverter"
                IncompletedColor="{StaticResource InputField}"
                CompletedColor="{StaticResource GoalCompletedStroke}"
                OverdueColor="{StaticResource GoalOverdueStroke}"/>

            <converters:BoolToColorConverter
                x:Key="IsGoalEmptyToColorConverter"
                TrueColor="{StaticResource InputField}"
                FalseColor="Black"/>
            
            <converters:GoalStatusToTextDecorationsConverter
                x:Key="GoalStatusToTextDecorationsConverter"
                IncompletedTextDecorations="None"
                CompletedTextDecorations="Strikethrough"
                OverdueTextDecorations="None"/>

            <toolkit:VariableMultiValueConverter
                x:Key="AllTrueMultiConverter"
                ConditionType="All"
                Count="2"/>

            <converters:TaskCountToStringConverter
                x:Key="ConditionalTaskCountToStringConverter"
                TaskName="Условные задачи"/>

            <converters:TaskCountToStringConverter
                x:Key="GeneralTaskCountToStringConverter"
                TaskName="Основные задачи"/>

            <converters:BoolToOpacityConverter
                x:Key="IsCompletedToOpacityConverter"
                TrueOpacity="0.5"
                FalseOpacity="1"/>

            <converters:BoolToColorConverter
                x:Key="IsCompletedToColorConverter"
                TrueColor="{StaticResource Completed}"
                FalseColor="Transparent"/>

            <converters:TaskProgressConverter x:Key="TaskProgressConverter"/>

            <converters:RepeatTimePeriodConverter x:Key="RepeatTimePeriodConverter"/>

            <converters:PriorityToColorConverter
                x:Key="PriorityToColorConverter"
                DailyColor="{StaticResource Daily}"
                MandatoryColor="{StaticResource Mandatory}"
                ImportantColor="{StaticResource Important}"
                CommonColor="{StaticResource Common}"/>

            <converters:PriorityToStringConverter
                x:Key="PriorityToTextConverter"
                DailyTaskText="Ежедневная"
                MandatoryTaskText="Обязательная"
                ImportantTaskText="Важная"
                CommonTaskText="Обычная"/>

            <converters:BoolToColorConverter
                x:Key="CanEditTaskToColorConverter"
                TrueColor="{StaticResource GreenSelected}"
                FalseColor="{StaticResource Hover}"/>

            <converters:BoolToColorConverter
                x:Key="CanDeleteTaskToColorConverter"
                TrueColor="{StaticResource RedSelected}"
                FalseColor="{StaticResource Hover}"/>

            <converters:BoolToColorConverter
                x:Key="CanResetTaskToColorConverter"
                TrueColor="{StaticResource BlueSelected}"
                FalseColor="{StaticResource Hover}"/>

            <Style TargetType="Border" x:Key="GoalCard">
                <Setter Property="Padding" Value="10, 0, 0, 0"/>
                <Setter Property="BackgroundColor" Value="{StaticResource Hover}"/>
                <Setter Property="Stroke" Value="{StaticResource InputField}"/>
                <Setter Property="StrokeThickness" Value="1"/>
                <Setter Property="WidthRequest" Value="{StaticResource DefaultElementWidth}"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HorizontalOptions" Value="Start"/>
            </Style>

            <Style TargetType="Border" x:Key="GoalSign">
                <Setter Property="BackgroundColor" Value="{StaticResource Hover}"/>
                <Setter Property="StrokeThickness" Value="0"/>
                <Setter Property="StrokeShape" Value="RoundRectangle 0, 0, 20, 20"/>
                <Setter Property="HeightRequest" Value="30"/>
            </Style>

            <Style TargetType="Label" x:Key="GoalLabel">
                <Setter Property="InputTransparent" Value="True"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="LineBreakMode" Value="TailTruncation"/>
                <Setter Property="MaxLines" Value="2"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="HorizontalTextAlignment" Value="Start"/>
                <Setter Property="WidthRequest" Value="{StaticResource ShorterElementWidth}"/>
                <Setter Property="VerticalOptions" Value="Fill"/>
                <Setter Property="HorizontalOptions" Value="Start"/>
                <Setter Property="Margin" Value="0, 10, 10, 10"/>
            </Style>

            <Style TargetType="Grid" x:Key="TasksCollectionGrid">
                <Setter Property="RowSpacing" Value="5"/>
                <Setter Property="ColumnDefinitions" Value="*"/>
                <Setter Property="RowDefinitions" Value="Auto, *"/>
                <Setter Property="WidthRequest" Value="{StaticResource DefaultElementWidth}"/>
                <Setter Property="HorizontalOptions" Value="Start"/>
            </Style>

            <Style TargetType="CollectionView" x:Key="TasksCollectionView">
                <Setter Property="ItemSizingStrategy" Value="MeasureFirstItem"/>
                <Setter Property="SelectionMode" Value="None"/>
                <Setter Property="WidthRequest" Value="{StaticResource DefaultElementWidth}"/>
                <Setter Property="VerticalOptions" Value="Fill"/>

                <Setter Property="ItemsLayout">
                    <Setter.Value>
                        <LinearItemsLayout 
                            Orientation="Vertical"
                            ItemSpacing="{StaticResource TaskCardSpacing}"/>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="Frame" x:Key="TaskCard">
                <Setter Property="InputTransparent" Value="False"/>
                <Setter Property="BackgroundColor" Value="{StaticResource Hover}"/>
                <Setter Property="WidthRequest" Value="{StaticResource DefaultElementWidth}"/>
                <Setter Property="VerticalOptions" Value="Start"/>
                <Setter Property="HorizontalOptions" Value="Start"/>

                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Hover}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="Grid" x:Key="TaskCardGrid">
                <Setter Property="ColumnDefinitions" Value="50, *"/>
                <Setter Property="RowDefinitions" Value="Auto, Auto"/>
            </Style>

            <Style TargetType="Label" x:Key="TaskLabel">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="LineBreakMode" Value="WordWrap"/>
                <Setter Property="WidthRequest" Value="{StaticResource TaskLabelWidth}"/>
                <Setter Property="VerticalOptions" Value="Fill"/>
                <Setter Property="HorizontalOptions" Value="Start"/>
                <Setter Property="Margin" Value="0, 8, 0, 0"/>
            </Style>

            <Style TargetType="controls:TaskProgressIndicator">
                <Setter Property="ProgressFillColor" Value="{StaticResource ProgressFill}"/>
                <Setter Property="BackgroundFillColor" Value="{StaticResource ProgressBackgroundFill}"/>
                <Setter Property="CompletedFillColor" Value="{StaticResource Completed}"/>
                <Setter Property="WidthRequest" Value="{StaticResource RadialProgressBarSize}"/>
                <Setter Property="HeightRequest" Value="{StaticResource RadialProgressBarSize}"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
            </Style>

            <Style TargetType="Label" x:Key="TaskProgressLabel">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="Shadow">
                    <Setter.Value>
                        <Shadow
                            Brush="{StaticResource Gray}"
                            Offset="0, 0"
                            Radius="8"
                            Opacity="1"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="controls:СonditionalTaskModificatorsView">
                <Setter Property="FrequencyCardColor" Value="{StaticResource Frequency}"/>
                <Setter Property="CompletionTimeCardColor" Value="{StaticResource Time}"/>
                <Setter Property="NoteCardColor" Value="{StaticResource Note}"/>
                <Setter Property="VerticalOptions" Value="Fill"/>
                <Setter Property="HorizontalOptions" Value="Fill"/>
            </Style>

            <Style TargetType="ImageButton" x:Key="AddTaskButton">
                <Setter Property="BackgroundColor" Value="{StaticResource Good}"/>
                <Setter Property="Source" Value="{StaticResource AddIconName}"/>
                <Setter Property="WidthRequest" Value="{StaticResource FloatingActionButtonSize}"/>
                <Setter Property="HeightRequest" Value="{StaticResource FloatingActionButtonSize}"/>
                <Setter Property="VerticalOptions" Value="End"/>
                <Setter Property="HorizontalOptions" Value="End"/>
                <Setter Property="Margin" Value="0, 0, 20, 20"/>
            </Style>

        </ResourceDictionary>

    </ContentPage.Resources>

    <Grid
        ColumnDefinitions="*"
        RowDefinitions="*"
        VerticalOptions="Fill"
        HorizontalOptions="Fill">

        <ScrollView
            Grid.Column="0"
            Grid.Row="0">

            <VerticalStackLayout
                Spacing="20"
                Padding="20, 40, 0, 0">

                <Label
                    Style="{StaticResource Headline}"
                    Text="Задачи"/>

                <Grid
                    ColumnDefinitions="Auto, Auto"
                    RowDefinitions="Auto, Auto, Auto"
                    WidthRequest="{StaticResource DefaultElementWidth}"
                    HorizontalOptions="Start">

                    <Label
                        Style="{StaticResource SubHeadline}"
                        Text="Текущая цель"
                        Grid.ColumnSpan="2"
                        Grid.Row="0"/>

                    <Border
                        Style="{StaticResource GoalCard}"
                        Stroke="{Binding GoalStatus,
                            Converter={StaticResource GoalStatusToBorderColorConverter}}"
                        Grid.ColumnSpan="2"
                        Grid.Row="1">

                        <Border.Behaviors>
                            <toolkit:TouchBehavior
                                IsEnabled="{Binding GoalLoader.IsSuccessfullyCompleted}"
                                DefaultAnimationDuration="{StaticResource DefaultAnimationDuration}"
                                DefaultAnimationEasing="{x:Static Easing.Linear}"
                                PressedAnimationDuration="{StaticResource DefaultAnimationDuration}"
                                PressedOpacity="0.5"
                                Command="{Binding InvertGoalStatusCommand, Mode=OneTime}"/>
                        </Border.Behaviors>

                        <Label
                            Style="{StaticResource GoalLabel}"
                            IsVisible="{Binding GoalLoader.IsSuccessfullyCompleted}"
                            TextDecorations="{Binding GoalStatus,
                                Converter={StaticResource GoalStatusToTextDecorationsConverter}}"
                            TextColor="{Binding IsGoalEmpty, Converter={StaticResource IsGoalEmptyToColorConverter}}"
                            Text="{Binding GoalLabelText, TargetNullValue='Здесь пока пусто..'}"/>
                    </Border>

                    <Border
                        Style="{StaticResource GoalSign}"
                        BackgroundColor="{Binding GoalStatus,
                            Converter={StaticResource GoalStatusToColorConverter}}"
                        Margin="10, 0, 0, 0"
                        HorizontalOptions="Start"
                        Grid.ColumnSpan="2"
                        Grid.Row="2">

                        <Border.IsVisible>
                            <MultiBinding Converter="{StaticResource AllTrueMultiConverter}">
                                <Binding Path="GoalLoader.IsSuccessfullyCompleted"/>
                                <Binding Path="HasDeadline"/>
                            </MultiBinding>
                        </Border.IsVisible>

                        <Label
                            Text="{Binding Deadline, StringFormat='до {0:d}'}"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Margin="10, 0, 10, 0"/>
                    </Border>

                    <Border
                        Style="{StaticResource GoalSign}"
                        IsEnabled="{Binding GoalLoader.IsSuccessfullyCompleted}"
                        BackgroundColor="{StaticResource Good}"
                        Margin="0, 0, 10, 0"
                        HorizontalOptions="End"
                        Grid.ColumnSpan="2"
                        Grid.Row="2">

                        <Border.Behaviors>
                            <toolkit:TouchBehavior
                                DefaultAnimationDuration="{StaticResource DefaultAnimationDuration}"
                                PressedAnimationDuration="{StaticResource DefaultAnimationDuration}"
                                PressedBackgroundColor="White"
                                Command="{Binding EditGoalCommand, Mode=OneTime}"/>
                        </Border.Behaviors>

                        <Label
                            InputTransparent="True"
                            Text="Изменить"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Margin="10, 0, 10, 0"/>
                    </Border>
                </Grid>

                <Grid
                    Style="{StaticResource TasksCollectionGrid}">

                    <Label
                        Style="{StaticResource SubHeadline}"
                        TextColor="{StaticResource CondTask}"
                        Grid.Column="0"
                        Grid.Row="0">

                        <Label.Text>
                            <MultiBinding Converter="{StaticResource ConditionalTaskCountToStringConverter}">
                                <Binding Path="ConditionalTasksLoader.Result.Count"/>
                                <Binding Path="ConditionalTaskMaxCount"/>
                            </MultiBinding>
                        </Label.Text>
                    </Label>

                    <ActivityIndicator
                        Style="{StaticResource DummyActivityIndicator}"
                        IsVisible="{Binding IsTasksVisible, Converter={toolkit:InvertedBoolConverter}}"
                        Grid.Column="0"
                        Grid.Row="1"/>

                    <ContentView
                        IsVisible="{Binding IsTasksVisible}"
                        Grid.Column="0"
                        Grid.Row="1">

                        <CollectionView
                            Style="{StaticResource TasksCollectionView}"
                            IsVisible="{Binding ConditionalTasksLoader.IsSuccessfullyCompleted}"
                            ItemsSource="{Binding ConditionalTasksLoader.Result}"
                            Grid.Column="0"
                            Grid.Row="1">

                            <CollectionView.EmptyView>
                                <Label
                                    Style="{StaticResource EmptyViewLabel}"
                                    TextColor="{StaticResource CondTask}"/>
                            </CollectionView.EmptyView>

                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <SwipeView>
                                        <SwipeView.RightItems>
                                            <SwipeItems>
                                                <SwipeItemView
                                                    BackgroundColor="Transparent"
                                                    WidthRequest="50"
                                                    Command="{Binding EditConditionalTaskCommand, Mode=OneTime, 
                                                        Source={RelativeSource AncestorType={x:Type viewmodels:TaskPageViewModel}, Mode=FindAncestorBindingContext}}"
                                                    CommandParameter="{Binding .}">

                                                    <ImageButton
                                                        BackgroundColor="{StaticResource GreenSelected}"
                                                        Source="edit.png"
                                                        Padding="5"
                                                        VerticalOptions="Fill"
                                                        HorizontalOptions="Fill"/>
                                                </SwipeItemView>

                                                <SwipeItemView
                                                    BackgroundColor="Transparent"
                                                    WidthRequest="50"
                                                    Command="{Binding ResetConditionalTaskCommand, Mode=OneTime,
                                                        Source={RelativeSource AncestorType={x:Type viewmodels:TaskPageViewModel}, Mode=FindAncestorBindingContext}}"
                                                    CommandParameter="{Binding .}">

                                                    <ImageButton
                                                        BackgroundColor="{StaticResource BlueSelected}"
                                                        Source="reset.png"
                                                        Padding="5"
                                                        VerticalOptions="Fill"
                                                        HorizontalOptions="Fill"/>
                                                </SwipeItemView>

                                                <SwipeItemView
                                                    BackgroundColor="Transparent"
                                                    WidthRequest="50"
                                                    Command="{Binding DeleteConditionalTaskCommand, Mode=OneTime,
                                                        Source={RelativeSource AncestorType={x:Type viewmodels:TaskPageViewModel}, Mode=FindAncestorBindingContext}}"
                                                    CommandParameter="{Binding .}">

                                                    <ImageButton
                                                        BackgroundColor="{StaticResource RedSelected}"
                                                        Source="delete.png"
                                                        Padding="5"
                                                        VerticalOptions="Fill"
                                                        HorizontalOptions="Fill"/>
                                                </SwipeItemView>
                                            </SwipeItems>
                                        </SwipeView.RightItems>

                                        <Frame
                                            x:DataType="tasks:ConditionalTask"
                                            Style="{StaticResource TaskCard}"
                                            Opacity="{Binding IsCompleted, Converter={StaticResource IsCompletedToOpacityConverter}}"
                                            BorderColor="{Binding IsCompleted, Converter={StaticResource IsCompletedToColorConverter}}">

                                            <Frame.GestureRecognizers>
                                                <TapGestureRecognizer
                                                    NumberOfTapsRequired="1"
                                                    Command="{Binding PerformConditionalTaskCommand, Mode=OneTime, 
                                                        Source={RelativeSource AncestorType={x:Type viewmodels:TaskPageViewModel}, 
                                                        Mode=FindAncestorBindingContext}}"
                                                    CommandParameter="{Binding .}"/>
                                            </Frame.GestureRecognizers>

                                            <Grid
                                                Style="{StaticResource TaskCardGrid}">

                                                <controls:TaskProgressIndicator
                                                    RepeatCount="{Binding RepeatCount}"
                                                    TargetRepeatCount="{Binding TargetRepeatCount}"
                                                    Grid.Column="0"
                                                    Grid.RowSpan="2"/>

                                                <Label
                                                    Style="{StaticResource TaskProgressLabel}"
                                                    Grid.Column="0"
                                                    Grid.RowSpan="2">

                                                    <Label.Text>
                                                        <MultiBinding Converter="{StaticResource TaskProgressConverter}">
                                                            <Binding Path="RepeatCount"/>
                                                            <Binding Path="TargetRepeatCount"/>
                                                        </MultiBinding>
                                                    </Label.Text>
                                                </Label>

                                                <Label
                                                    Style="{StaticResource TaskLabel}"
                                                    Text="{Binding ActionName}"
                                                    Grid.Column="1"
                                                    Grid.Row="0"/>

                                                <controls:СonditionalTaskModificatorsView
                                                    CompletionTime="{Binding CompletionTime}"
                                                    Note="{Binding Note}"
                                                    Grid.Column="1"
                                                    Grid.Row="1">

                                                    <controls:СonditionalTaskModificatorsView.Frequency>
                                                        <MultiBinding Converter="{StaticResource RepeatTimePeriodConverter}">
                                                            <Binding Path="TargetRepeatCount"/>
                                                            <Binding Path="RepeatTimePeriod"/>
                                                        </MultiBinding>
                                                    </controls:СonditionalTaskModificatorsView.Frequency>
                                                </controls:СonditionalTaskModificatorsView>
                                            </Grid>
                                        </Frame>
                                    </SwipeView>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </ContentView>
                </Grid>

                <Grid
                    Style="{StaticResource TasksCollectionGrid}">

                    <Label
                        Style="{StaticResource SubHeadline}"
                        TextColor="{StaticResource GeneralTask}"
                        Grid.Column="0"
                        Grid.Row="0">

                        <Label.Text>
                            <MultiBinding Converter="{StaticResource GeneralTaskCountToStringConverter}">
                                <Binding Path="GeneralTasksLoader.Result.Count"/>
                                <Binding Path="GeneralTaskMaxCount"/>
                            </MultiBinding>
                        </Label.Text>
                    </Label>

                    <ActivityIndicator
                        Style="{StaticResource DummyActivityIndicator}"
                        IsVisible="{Binding IsTasksVisible, Converter={toolkit:InvertedBoolConverter}}"
                        Grid.Column="0"
                        Grid.Row="1"/>

                    <ContentView
                        IsVisible="{Binding IsTasksVisible}"
                        Grid.Column="0"
                        Grid.Row="1">

                        <CollectionView
                            Style="{StaticResource TasksCollectionView}"
                            IsVisible="{Binding GeneralTasksLoader.IsSuccessfullyCompleted}"
                            ItemsSource="{Binding GeneralTasksLoader.Result}"
                            SelectedItem="{Binding SelectedGeneralTask, Mode=TwoWay}"
                            SelectionChangedCommand="{Binding GeneralTaskInteractCommand}"
                            SelectionChangedCommandParameter="{Binding SelectedItem, Source={RelativeSource Mode=Self}}"
                            Margin="{StaticResource GeneralTaskCollectionViewMargin}"
                            Grid.Column="0"
                            Grid.Row="1">

                            <CollectionView.EmptyView>
                                <Label
                                    Style="{StaticResource EmptyViewLabel}"
                                    TextColor="{StaticResource GeneralTask}"/>
                            </CollectionView.EmptyView>

                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <SwipeView>
                                        <SwipeView.RightItems>
                                            <SwipeItems>
                                                <SwipeItemView
                                                    BackgroundColor="Transparent"
                                                    WidthRequest="50"
                                                    Command="{Binding EditGeneralTaskCommand, Mode=OneTime, 
                                                        Source={RelativeSource AncestorType={x:Type viewmodels:TaskPageViewModel}, Mode=FindAncestorBindingContext}}"
                                                    CommandParameter="{Binding .}">

                                                    <ImageButton
                                                        BackgroundColor="{StaticResource GreenSelected}"
                                                        Source="edit.png"
                                                        Padding="5"
                                                        VerticalOptions="Fill"
                                                        HorizontalOptions="Fill"/>
                                                </SwipeItemView>

                                                <SwipeItemView
                                                    BackgroundColor="Transparent"
                                                    WidthRequest="50"
                                                    Command="{Binding ResetGeneralTaskCommand, Mode=OneTime,
                                                        Source={RelativeSource AncestorType={x:Type viewmodels:TaskPageViewModel}, Mode=FindAncestorBindingContext}}"
                                                    CommandParameter="{Binding .}">

                                                    <ImageButton
                                                        BackgroundColor="{StaticResource BlueSelected}"
                                                        Source="reset.png"
                                                        Padding="5"
                                                        VerticalOptions="Fill"
                                                        HorizontalOptions="Fill"/>
                                                </SwipeItemView>

                                                <SwipeItemView
                                                    BackgroundColor="Transparent"
                                                    WidthRequest="50"
                                                    Command="{Binding DeleteGeneralTaskCommand, Mode=OneTime,
                                                        Source={RelativeSource AncestorType={x:Type viewmodels:TaskPageViewModel}, Mode=FindAncestorBindingContext}}"
                                                    CommandParameter="{Binding .}">

                                                    <ImageButton
                                                        BackgroundColor="{StaticResource RedSelected}"
                                                        Source="delete.png"
                                                        Padding="5"
                                                        VerticalOptions="Fill"
                                                        HorizontalOptions="Fill"/>
                                                </SwipeItemView>
                                            </SwipeItems>
                                        </SwipeView.RightItems>

                                        <Frame
                                            x:DataType="tasks:GeneralTask"
                                            Style="{StaticResource TaskCard}"
                                            Opacity="{Binding IsCompleted, Converter={StaticResource IsCompletedToOpacityConverter}}"
                                            BorderColor="{Binding IsCompleted, Converter={StaticResource IsCompletedToColorConverter}}">

                                            <Frame.GestureRecognizers>
                                                <TapGestureRecognizer
                                                    NumberOfTapsRequired="1"
                                                    Command="{Binding PerformGeneralTaskCommand, Mode=OneTime, 
                                                        Source={RelativeSource AncestorType={x:Type viewmodels:TaskPageViewModel}, 
                                                        Mode=FindAncestorBindingContext}}"
                                                    CommandParameter="{Binding .}"/>
                                            </Frame.GestureRecognizers>

                                            <Grid
                                                Style="{StaticResource TaskCardGrid}">

                                                <controls:TaskProgressIndicator
                                                    RepeatCount="{Binding RepeatCount}"
                                                    TargetRepeatCount="{Binding TargetRepeatCount}"
                                                    Grid.Column="0"
                                                    Grid.RowSpan="2"/>

                                                <Label
                                                    Style="{StaticResource TaskProgressLabel}"
                                                    Grid.Column="0"
                                                    Grid.RowSpan="2">

                                                    <Label.Text>
                                                        <MultiBinding Converter="{StaticResource TaskProgressConverter}">
                                                            <Binding Path="RepeatCount"/>
                                                            <Binding Path="TargetRepeatCount"/>
                                                        </MultiBinding>
                                                    </Label.Text>
                                                </Label>

                                                <Label
                                                    Style="{StaticResource TaskLabel}"
                                                    Text="{Binding ActionName}"
                                                    Grid.Column="1"
                                                    Grid.Row="0"/>

                                                <Frame
                                                    Style="{StaticResource ModificatorCard}"
                                                    BackgroundColor="{Binding Priority, Converter={StaticResource PriorityToColorConverter}}"
                                                    Grid.Column="1"
                                                    Grid.Row="1"
                                                    Margin="{StaticResource ModificatorMargin}">

                                                    <Label
                                                        Style="{StaticResource ModificatorLabel}"
                                                        Text="{Binding Priority, Converter={StaticResource PriorityToTextConverter}}"/>
                                                </Frame>
                                            </Grid>
                                        </Frame>
                                    </SwipeView>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </ContentView>
                </Grid>
            </VerticalStackLayout>
        </ScrollView>

        <ImageButton
            Style="{StaticResource AddTaskButton}"
            Command="{Binding AddTaskCommand}"
            Grid.Column="0"
            Grid.Row="0"/>
    </Grid>
</ContentPage>